//
// File generated by rootcint at Fri Oct 31 11:01:46 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME NoiseSpectrumDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "NoiseSpectrumDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void NoiseSpectrum_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NoiseSpectrum(void *p = 0);
   static void *newArray_NoiseSpectrum(Long_t size, void *p);
   static void delete_NoiseSpectrum(void *p);
   static void deleteArray_NoiseSpectrum(void *p);
   static void destruct_NoiseSpectrum(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::NoiseSpectrum*)
   {
      ::NoiseSpectrum *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::NoiseSpectrum >(0);
      static ::ROOT::TGenericClassInfo 
         instance("NoiseSpectrum", ::NoiseSpectrum::Class_Version(), "./../src/NoiseSpectrum.h", 7,
                  typeid(::NoiseSpectrum), DefineBehavior(ptr, ptr),
                  &::NoiseSpectrum::Dictionary, isa_proxy, 4,
                  sizeof(::NoiseSpectrum) );
      instance.SetNew(&new_NoiseSpectrum);
      instance.SetNewArray(&newArray_NoiseSpectrum);
      instance.SetDelete(&delete_NoiseSpectrum);
      instance.SetDeleteArray(&deleteArray_NoiseSpectrum);
      instance.SetDestructor(&destruct_NoiseSpectrum);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::NoiseSpectrum*)
   {
      return GenerateInitInstanceLocal((::NoiseSpectrum*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::NoiseSpectrum*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *NoiseSpectrum::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *NoiseSpectrum::Class_Name()
{
   return "NoiseSpectrum";
}

//______________________________________________________________________________
const char *NoiseSpectrum::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::NoiseSpectrum*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int NoiseSpectrum::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::NoiseSpectrum*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void NoiseSpectrum::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::NoiseSpectrum*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *NoiseSpectrum::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::NoiseSpectrum*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void NoiseSpectrum::Streamer(TBuffer &R__b)
{
   // Stream an object of class NoiseSpectrum.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(NoiseSpectrum::Class(),this);
   } else {
      R__b.WriteClassBuffer(NoiseSpectrum::Class(),this);
   }
}

//______________________________________________________________________________
void NoiseSpectrum::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class NoiseSpectrum.
      TClass *R__cl = ::NoiseSpectrum::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChannel", (void*)&fChannel);
      R__insp.InspectMember("string", (void*)&fChannel, "fChannel.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStartValidity", &fStartValidity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEndValidity", &fEndValidity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSampling_ms", &fSampling_ms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSpectrum", (void*)&fSpectrum);
      R__insp.InspectMember("vector<Float_t>", (void*)&fSpectrum, "fSpectrum.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_NoiseSpectrum(void *p) {
      return  p ? new(p) ::NoiseSpectrum : new ::NoiseSpectrum;
   }
   static void *newArray_NoiseSpectrum(Long_t nElements, void *p) {
      return p ? new(p) ::NoiseSpectrum[nElements] : new ::NoiseSpectrum[nElements];
   }
   // Wrapper around operator delete
   static void delete_NoiseSpectrum(void *p) {
      delete ((::NoiseSpectrum*)p);
   }
   static void deleteArray_NoiseSpectrum(void *p) {
      delete [] ((::NoiseSpectrum*)p);
   }
   static void destruct_NoiseSpectrum(void *p) {
      typedef ::NoiseSpectrum current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::NoiseSpectrum

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

/********************************************************
* NoiseSpectrumDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableNoiseSpectrumDict();

extern "C" void G__set_cpp_environmentNoiseSpectrumDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../src/NoiseSpectrum.cc");
  G__cpp_reset_tagtableNoiseSpectrumDict();
}
#include <new>
extern "C" int G__cpp_dllrevNoiseSpectrumDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* NoiseSpectrum */
static int G__NoiseSpectrumDict_670_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NoiseSpectrum* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NoiseSpectrum[n];
     } else {
       p = new((void*) gvp) NoiseSpectrum[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NoiseSpectrum;
     } else {
       p = new((void*) gvp) NoiseSpectrum;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_NoiseSpectrum));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NoiseSpectrum* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new NoiseSpectrum(
*((const string*) G__int(libp->para[0])), (const ULong64_t) G__ULonglong(libp->para[1])
, (const ULong64_t) G__ULonglong(libp->para[2]));
   } else {
     p = new((void*) gvp) NoiseSpectrum(
*((const string*) G__int(libp->para[0])), (const ULong64_t) G__ULonglong(libp->para[1])
, (const ULong64_t) G__ULonglong(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_NoiseSpectrum));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((const NoiseSpectrum*) G__getstructoffset())->StartValidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((const NoiseSpectrum*) G__getstructoffset())->EndValidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NoiseSpectrum*) G__getstructoffset())->SetStartValidity((ULong64_t) G__ULonglong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NoiseSpectrum*) G__getstructoffset())->SetEndValidity((ULong64_t) G__ULonglong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const NoiseSpectrum*) G__getstructoffset())->Channel();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NoiseSpectrum*) G__getstructoffset())->SetChannel(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NoiseSpectrum*) G__getstructoffset())->SetSpectrum(*((vector<Float_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Float_t>* pobj;
         const vector<Float_t> xobj = ((const NoiseSpectrum*) G__getstructoffset())->Spectrum();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const NoiseSpectrum*) G__getstructoffset())->Sampling_ms());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NoiseSpectrum*) G__getstructoffset())->SetSampling_ms((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) NoiseSpectrum::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NoiseSpectrum::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) NoiseSpectrum::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      NoiseSpectrum::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NoiseSpectrum*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NoiseSpectrum::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NoiseSpectrum::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NoiseSpectrum::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NoiseSpectrumDict_670_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NoiseSpectrum::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__NoiseSpectrumDict_670_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   NoiseSpectrum* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new NoiseSpectrum(*(NoiseSpectrum*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_NoiseSpectrum));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef NoiseSpectrum G__TNoiseSpectrum;
static int G__NoiseSpectrumDict_670_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (NoiseSpectrum*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((NoiseSpectrum*) (soff+(sizeof(NoiseSpectrum)*i)))->~G__TNoiseSpectrum();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (NoiseSpectrum*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((NoiseSpectrum*) (soff))->~G__TNoiseSpectrum();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__NoiseSpectrumDict_670_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NoiseSpectrum* dest = (NoiseSpectrum*) G__getstructoffset();
   *dest = *(NoiseSpectrum*) libp->para[0].ref;
   const NoiseSpectrum& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* NoiseSpectrum */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncNoiseSpectrumDict {
 public:
  G__Sizep2memfuncNoiseSpectrumDict(): p(&G__Sizep2memfuncNoiseSpectrumDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncNoiseSpectrumDict::*p)();
};

size_t G__get_sizep2memfuncNoiseSpectrumDict()
{
  G__Sizep2memfuncNoiseSpectrumDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceNoiseSpectrumDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__NoiseSpectrumDictLN_NoiseSpectrum))) {
     NoiseSpectrum *G__Lderived;
     G__Lderived=(NoiseSpectrum*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__NoiseSpectrumDictLN_NoiseSpectrum),G__get_linked_tagnum(&G__NoiseSpectrumDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableNoiseSpectrumDict() {

   /* Setting up typedef entry */
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("ULong64_t",109,-1,0,-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<BoloStr>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEBoloStrcOallocatorlEBoloStrgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEBoloStrcOallocatorlEBoloStrgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEBoloStrcOallocatorlEBoloStrgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEBoloStrcOallocatorlEBoloStrgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEBoloStrcOallocatorlEBoloStrgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RunStr>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlERunStrcOallocatorlERunStrgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlERunStrcOallocatorlERunStrgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlERunStrcOallocatorlERunStrgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlERunStrcOallocatorlERunStrgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlERunStrcOallocatorlERunStrgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PeriodStr>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEPeriodStrcOallocatorlEPeriodStrgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEPeriodStrcOallocatorlEPeriodStrgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEPeriodStrcOallocatorlEPeriodStrgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEPeriodStrcOallocatorlEPeriodStrgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEPeriodStrcOallocatorlEPeriodStrgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TemplateStr>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlETemplateStrcOallocatorlETemplateStrgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlETemplateStrcOallocatorlETemplateStrgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlETemplateStrcOallocatorlETemplateStrgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlETemplateStrcOallocatorlETemplateStrgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlETemplateStrcOallocatorlETemplateStrgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* NoiseSpectrum */
static void G__setup_memvarNoiseSpectrum(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__NoiseSpectrumDictLN_NoiseSpectrum));
   { NoiseSpectrum *p; p=(NoiseSpectrum*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_string),-1,-1,4,"fChannel=",0,"*< Template channel */");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fStartValidity=",0,"*< Period of validity */");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fEndValidity=",0,"*< Period of validity */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fSampling_ms=",0,"*< f_max/kHz = 1/2*sampling_ms (Shannon) */");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"fSpectrum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NoiseSpectrumDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarNoiseSpectrumDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncNoiseSpectrum(void) {
   /* NoiseSpectrum */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__NoiseSpectrumDictLN_NoiseSpectrum));
   G__memfunc_setup("NoiseSpectrum",1361,G__NoiseSpectrumDict_670_0_1, 105, G__get_linked_tagnum(&G__NoiseSpectrumDictLN_NoiseSpectrum), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NoiseSpectrum",1361,G__NoiseSpectrumDict_670_0_2, 105, G__get_linked_tagnum(&G__NoiseSpectrumDictLN_NoiseSpectrum), -1, 0, 3, 1, 1, 0, 
"u 'string' - 10 - channel m - 'ULong64_t' 10 - tinf "
"m - 'ULong64_t' 10 - tsup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StartValidity",1364,G__NoiseSpectrumDict_670_0_3, 109, -1, G__defined_typename("ULong64_t"), 0, 0, 1, 1, 8, "", "*< Period of validity of these data */", (void*) NULL, 0);
   G__memfunc_setup("EndValidity",1117,G__NoiseSpectrumDict_670_0_4, 109, -1, G__defined_typename("ULong64_t"), 0, 0, 1, 1, 8, "", "*< Period of validity of these data */", (void*) NULL, 0);
   G__memfunc_setup("SetStartValidity",1664,G__NoiseSpectrumDict_670_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "m - 'ULong64_t' 0 - aTime", "*< Period of validity of these data */", (void*) NULL, 0);
   G__memfunc_setup("SetEndValidity",1417,G__NoiseSpectrumDict_670_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "m - 'ULong64_t' 0 - aTime", "*< Period of validity of these data */", (void*) NULL, 0);
   G__memfunc_setup("Channel",697,G__NoiseSpectrumDict_670_0_7, 117, G__get_linked_tagnum(&G__NoiseSpectrumDictLN_string), -1, 0, 0, 1, 1, 8, "", "*< Channel concerned by the data */", (void*) NULL, 0);
   G__memfunc_setup("SetChannel",997,G__NoiseSpectrumDict_670_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - aChannel", "*< Channel */", (void*) NULL, 0);
   G__memfunc_setup("SetSpectrum",1151,G__NoiseSpectrumDict_670_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<Float_t>' 0 - aNoise", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spectrum",851,G__NoiseSpectrumDict_670_0_10, 117, G__get_linked_tagnum(&G__NoiseSpectrumDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Sampling_ms",1146,G__NoiseSpectrumDict_670_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSampling_ms",1446,G__NoiseSpectrumDict_670_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - aSampling", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__NoiseSpectrumDict_670_0_13, 85, G__get_linked_tagnum(&G__NoiseSpectrumDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&NoiseSpectrum::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__NoiseSpectrumDict_670_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NoiseSpectrum::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__NoiseSpectrumDict_670_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&NoiseSpectrum::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__NoiseSpectrumDict_670_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&NoiseSpectrum::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__NoiseSpectrumDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__NoiseSpectrumDict_670_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__NoiseSpectrumDict_670_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NoiseSpectrum::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__NoiseSpectrumDict_670_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&NoiseSpectrum::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__NoiseSpectrumDict_670_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NoiseSpectrum::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__NoiseSpectrumDict_670_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&NoiseSpectrum::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("NoiseSpectrum", 1361, G__NoiseSpectrumDict_670_0_25, (int) ('i'), G__get_linked_tagnum(&G__NoiseSpectrumDictLN_NoiseSpectrum), -1, 0, 1, 1, 1, 0, "u 'NoiseSpectrum' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~NoiseSpectrum", 1487, G__NoiseSpectrumDict_670_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__NoiseSpectrumDict_670_0_27, (int) ('u'), G__get_linked_tagnum(&G__NoiseSpectrumDictLN_NoiseSpectrum), -1, 1, 1, 1, 1, 0, "u 'NoiseSpectrum' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncNoiseSpectrumDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalNoiseSpectrumDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcNoiseSpectrumDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__NoiseSpectrumDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_vectorlEBoloStrcOallocatorlEBoloStrgRsPgR = { "vector<BoloStr,allocator<BoloStr> >" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEBoloStrcOallocatorlEBoloStrgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<BoloStr,allocator<BoloStr> >::iterator>" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_vectorlERunStrcOallocatorlERunStrgRsPgR = { "vector<RunStr,allocator<RunStr> >" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlERunStrcOallocatorlERunStrgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RunStr,allocator<RunStr> >::iterator>" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_vectorlEPeriodStrcOallocatorlEPeriodStrgRsPgR = { "vector<PeriodStr,allocator<PeriodStr> >" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEPeriodStrcOallocatorlEPeriodStrgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<PeriodStr,allocator<PeriodStr> >::iterator>" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_vectorlETemplateStrcOallocatorlETemplateStrgRsPgR = { "vector<TemplateStr,allocator<TemplateStr> >" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlETemplateStrcOallocatorlETemplateStrgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TemplateStr,allocator<TemplateStr> >::iterator>" , 99 , -1 };
G__linked_taginfo G__NoiseSpectrumDictLN_NoiseSpectrum = { "NoiseSpectrum" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableNoiseSpectrumDict() {
  G__NoiseSpectrumDictLN_TClass.tagnum = -1 ;
  G__NoiseSpectrumDictLN_TBuffer.tagnum = -1 ;
  G__NoiseSpectrumDictLN_TMemberInspector.tagnum = -1 ;
  G__NoiseSpectrumDictLN_TObject.tagnum = -1 ;
  G__NoiseSpectrumDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_string.tagnum = -1 ;
  G__NoiseSpectrumDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_vectorlEBoloStrcOallocatorlEBoloStrgRsPgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEBoloStrcOallocatorlEBoloStrgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_vectorlERunStrcOallocatorlERunStrgRsPgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlERunStrcOallocatorlERunStrgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_vectorlEPeriodStrcOallocatorlEPeriodStrgRsPgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEPeriodStrcOallocatorlEPeriodStrgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_vectorlETemplateStrcOallocatorlETemplateStrgRsPgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlETemplateStrcOallocatorlETemplateStrgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__NoiseSpectrumDictLN_NoiseSpectrum.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableNoiseSpectrumDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_string);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_vectorlEBoloStrcOallocatorlEBoloStrgRsPgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEBoloStrcOallocatorlEBoloStrgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_vectorlERunStrcOallocatorlERunStrgRsPgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlERunStrcOallocatorlERunStrgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_vectorlEPeriodStrcOallocatorlEPeriodStrgRsPgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlEPeriodStrcOallocatorlEPeriodStrgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_vectorlETemplateStrcOallocatorlETemplateStrgRsPgR);
   G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_reverse_iteratorlEvectorlETemplateStrcOallocatorlETemplateStrgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__NoiseSpectrumDictLN_NoiseSpectrum),sizeof(NoiseSpectrum),-1,324864,(char*)NULL,G__setup_memvarNoiseSpectrum,G__setup_memfuncNoiseSpectrum);
}
extern "C" void G__cpp_setupNoiseSpectrumDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupNoiseSpectrumDict()");
  G__set_cpp_environmentNoiseSpectrumDict();
  G__cpp_setup_tagtableNoiseSpectrumDict();

  G__cpp_setup_inheritanceNoiseSpectrumDict();

  G__cpp_setup_typetableNoiseSpectrumDict();

  G__cpp_setup_memvarNoiseSpectrumDict();

  G__cpp_setup_memfuncNoiseSpectrumDict();
  G__cpp_setup_globalNoiseSpectrumDict();
  G__cpp_setup_funcNoiseSpectrumDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncNoiseSpectrumDict();
  return;
}
class G__cpp_setup_initNoiseSpectrumDict {
  public:
    G__cpp_setup_initNoiseSpectrumDict() { G__add_setup_func("NoiseSpectrumDict",(G__incsetup)(&G__cpp_setupNoiseSpectrumDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initNoiseSpectrumDict() { G__remove_setup_func("NoiseSpectrumDict"); }
};
G__cpp_setup_initNoiseSpectrumDict G__cpp_setup_initializerNoiseSpectrumDict;

